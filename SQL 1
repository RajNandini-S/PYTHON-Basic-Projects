
SQL – ASSIGNMENT 1

Problem Statement: ABC Fashion is a leading retailer with a vast customer base and a team of dedicated sales representatives. They have a Sales Order Processing System that helps manage customer orders and interactions.

Tasks:
1.	Insert a new record in your Orders table.
INSERT INTO Orders (OrderId, CustomerId, SalesmanId, Orderdate, Amount)  Values (5011,1589,108,'2022-09-27',1650);

2.	Add Primary key constraint for SalesmanId column in Salesman table. Add default constraint for City column in Salesman table. Add Foreign key constraint for SalesmanId column in Customer table. Add not null constraint in Customer_name column for the Customer table.
ALTER TABLE Salesman
ALTER COLUMN SalesmanId INT NOT NULL;
-- Adding Primary Key constraint to Salesman table
ALTER TABLE Salesman
ADD CONSTRAINT PK_SalesmanId PRIMARY KEY (SalesmanId);

-- Adding Default constraint for City column in Salesman table
ALTER TABLE Salesman
ADD CONSTRAINT DF_Salesman_City DEFAULT 'Unknown' FOR City;

-- Adding Foreign Key constraint to Customer table
ALTER TABLE Customer
ADD CONSTRAINT FK_Customer_SalesmanId FOREIGN KEY (SalesmanId)
REFERENCES Salesman(SalesmanId);

-- Adding Not Null constraint to CustomerName in Customer table
ALTER TABLE Customer
ALTER COLUMN CustomerName VARCHAR(255) NOT NULL;

3.	Fetch the data where the Customer’s name is ending with ‘N’ also get the purchase amount value greater than 500.
SELECT * FROM Customer WHERE CustomerName LIKE '%N' AND PurchaseAmount > 500;

4.	Using SET operators, retrieve the first result with unique SalesmanId values from two tables, and the other result containing SalesmanId with duplicates from two tables.
--- Unique SalesmanId values
SELECT SalesmanId FROM Salesman UNION SELECT SalesmanId FROM Customer;

--- Duplicate SalesmanId values
SELECT SalesmanId FROM Salesman UNION ALL SELECT SalesmanId FROM Customer;

5.	Display the below columns which has the matching data. Orderdate, Salesman Name, Customer Name, Commission, and City which has the range of Purchase Amount between 500 to 1500.
SELECT O.Orderdate, S.Name AS SalesmanName, C.CustomerName, S.Commission, S.City FROM Orders O JOIN Salesman S ON O.SalesmanId = S.SalesmanId JOIN Customer C ON O.CustomerId = C.CustomerId WHERE C.PurchaseAmount BETWEEN 500 AND 1500;

6.	 Using right join fetch all the results from Salesman and Orders table.
SELECT S.SalesmanId, S.Name, S.Commission, S.City, S.Age, O.OrderId, O.CustomerId, O.Orderdate, O.Amount FROM Salesman S 
RIGHT JOIN Orders O ON S.SalesmanId = O.SalesmanId;
